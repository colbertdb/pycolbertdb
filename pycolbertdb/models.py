# generated by datamodel-codegen:
#   filename:  http://localhost:8000/collections/openapi.json
#   timestamp: 2024-05-16T19:27:21+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, Field


class ListCollectionsResponse(BaseModel):
    """
    Pydantic model for the response of listing collections.
    """

    collections: List[str]


class GetCollectionResponse(BaseModel):
    """
    Pydantic model for the response of getting a collection.
    """

    exists: bool


class CreateCollectionDocument(BaseModel):
    content: str = Field(..., title="Content")
    metadata: Optional[Dict[str, Any]] = Field(None, title="Metadata")


class CreateCollectionRequest(BaseModel):
    name: str = Field(..., title="Name")
    documents: List[CreateCollectionDocument] = Field(..., title="Documents")
    options: Optional[Dict[str, Any]] = Field(None, title="Options")


class DeleteDocumentsRequest(BaseModel):
    document_ids: List[str] = Field(..., title="Document Ids")


class Document(BaseModel):
    content: str = Field(..., title="Content")
    document_id: Optional[str] = Field(None, title="Document Id")
    score: Optional[float] = Field(None, title="Score")
    rank: Optional[int] = Field(None, title="Rank")
    passage_id: Optional[int] = Field(None, title="Passage Id")
    metadata: Optional[Dict[str, Any]] = Field(None, title="Metadata")


class OperationResponse(BaseModel):
    status: str = Field(..., title="Status")
    message: str = Field(..., title="Message")


class SearchCollectionRequest(BaseModel):
    k: Optional[int] = Field(None, title="K")
    query: str = Field(..., title="Query")


class SearchCollectionResponse(BaseModel):
    documents: List[Document] = Field(..., title="Documents")


class ValidationError(BaseModel):
    loc: List[Union[str, int]] = Field(..., title="Location")
    msg: str = Field(..., title="Message")
    type: str = Field(..., title="Error Type")


class AddToCollectionRequest(BaseModel):
    documents: List[CreateCollectionDocument] = Field(..., title="Documents")


class HTTPValidationError(BaseModel):
    detail: Optional[List[ValidationError]] = Field(None, title="Detail")
